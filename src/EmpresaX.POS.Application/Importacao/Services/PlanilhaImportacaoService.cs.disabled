using ExcelDataReader;
using System;
using System.IO;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using EmpresaX.POS.Domain.Entities; // Adicione este using
using EmpresaX.POS.Infrastructure.Data; // Adicione este using

namespace EmpresaX.POS.Application.Importacao.Services
{
    public class PlanilhaImportacaoService // : IPlanilhaImportacaoService
    {
        private readonly ILogger<PlanilhaImportacaoService> _logger;
        private readonly AppDbContext _context; // Injeta o DbContext para salvar os dados

        public PlanilhaImportacaoService(ILogger<PlanilhaImportacaoService> logger, AppDbContext context)
        {
            _logger = logger;
            _context = context;
            System.Text.Encoding.RegisterProvider(System.Text.CodePagesEncodingProvider.Instance);
        }

        public async Task ImportarExtratoAsync(Stream fileStream)
        {
            _logger.LogInformation("Iniciando processamento do extrato.");

            using (var reader = ExcelReaderFactory.CreateBinaryReader(fileStream))
            {
                reader.Read(); // Pula o cabeçalho

                while (reader.Read())
                {
                    try
                    {
                        var novaTransacao = new TransacaoBancaria
                        {
                            Data = reader.GetDateTime(0),      // Coluna 0
                            Descricao = reader.GetString(1),   // Coluna 1
                            Valor = reader.GetDecimal(2)       // Coluna 2
                            // Ajuste os tipos e números das colunas conforme sua planilha
                        };

                        await _context.TransacoesBancarias.AddAsync(novaTransacao);
                    }
                    catch (Exception ex) { /* ... */ }
                }
            }
            await _context.SaveChangesAsync();
            _logger.LogInformation("Processamento do extrato concluído.");
        }
    }
}